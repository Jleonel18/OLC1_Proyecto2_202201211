
ENTERO = [0-9]+
DOUBLE = ENTERO | ENTERO\.ENTERO
RES_IF = "if"
RES_POW = "pow"
RES_ELSE = "else"
RES_SWITCH = switch"
RES_CASE = "case"
RES_DEFAULT = "default"
RES_WHILE = "while"
RES_FOR = "for"
RES_DO = "do"
RES_NEW = "new"
RES_BREAK = "break"
RES_CONTINUE = "continue"
RES_RETURN = return"
RES_VOID = "void"
COUT = "cout"
DOBLE_MENORQ = "<<"
RES_TOLOWER = "tolower"
RES_TOUPER = "touper"
RES_ROUND = "round"
RES_LENGTH = "length"
RES_TYPEOF = "typeof"
RES_TOSTRING = "tostring"
RES_C_STR = "c_str"
RES_EXECUTE = "execute"
ENDL = "endl"
BOOLEANO = true | false
CARACTER = [.] // Todos los caracteres posibles
CADENA = [^" ]+
COMILLAS_D = "
COMILLAS_S
CADENA_TEXTO = COMILLAS_D CADENA COMILLAS_D
CARACTER_TEXTO = COMULLAS_S CARACTER COMILLAS_S
ID = CADENA (CADENA)* (ENTERO)* | CADENA (CADENA)*

No terminales = <inicio>

Empieza = <inicio>

<inicio> ::= <instrucciones>

<instrucciones< ::= <instrucciones> <instruccion>
			| <instruccion>

<instruccion> ::= 	<impresion>
			| <declaracion> ";"
			| <asignacion> ";"
			| <if> PYC
			| <while>
			| <break>
			| <do_while>
			| <for>
			| <continue>
			| <switch>
			| <arreglo>
			| <editar_arreglo>

<impresion> ::= COUT "<" "<" expresion <final_cout>

<final_cout> ::= "<" "<" ENDL ";"
		| ";"


<declaracion> ::= <tipos> <declaraciones_varias> <asignar_declaracion>

<asignar_declaracion> ::= "=" expresion
			| epsilon

<declaraciones_varias> ::= <declaraciones_varias> "," ID
			| ID

<asignacion> ::= ID "=" <expresion>

<tipos> ::=	 "int"
		| "double"
		| "std" ":" ":" "string"
		| "bool"
		| "char"

<expresion> ::= <expresion> "+" <expresion>
		| <expresion> "-" <expresion>
		| <expreion> "*" <expresion>
		| <expresion> "/" <expresion>
		| <expresion> "%" <expresion>
		| "(" <expresion> ")"
		| RES_POW "(" <expresion> "," <expresion> ")"
		| <expresion> "=" "=" <expresion>
		| <expresion> "<" <expresion>
		| <expresion> ">" <expresion>
		| <expresion> "!" "=" <expresion>
		| <expresion> "<" "=" <expresion>
		| <expresion> ">" "=" <expresion>
		| "!" <expresion>
		| <expresion> "&&" <expresion>
		| <expresion> "||" <expresion>
		| "-" <expresion>
		| BOOLEANO
		| CARACTER
		| CADENA
		| ENTERO
		| DOUBLE
		| <f_nativas>
		| <expresion> "." "length" "(" ")"
		| <casteo>
		| <expresion> "?" <expresion>  ":" <expresion>
		| <buscar_arreglo>

<f_nativas> ::= RES_TOLOWER "(" <expresion> ")"
		| RES_TOUPPER "(" <expresion> ")"
		| RES_ROUND "(" <expresion> ")"
		| RES_TYPEOF "(" <expresion> ")"
		| "std" ":" ":" R_TOSTRING "(" ")" expresion ")"
		| RES_C_STR "(" expresion ")"

<if> ::= RES_IF "(" expresion ")" "{" <instrucciones> "}" <else_opcional>

<else_opcional> ::= RES_ELSE "{" <instrucciones> "}"
		| RES_ELSE <if>
		| epsilon

<switch> ::= RES_SWITCH "(" <expresion> ")" "{" <lista_casos> "}"

<switch> ::= <lista_casos> <caso>
		| <caso>

<caso> ::= RES_CASE <expresion> ":" <instrucciones>
	| RES_DEFAULT ":" <instrucciones>

<while> ::= RES_WHILE "(" <expresion> ")" "{" <instrucciones> "}"

<do_while> ::= RES_DO "{" <instrucciones> "}" RES_WHILE "(" <expresion> ")" ";"

<for> ::= RES_FOR "(" <eleccion_for> ";" <expresion> ";" <asignacion> ")" "{" <instrucciones> "}"

<eleccion_for> ::= <declaracion>
		| <asignacion>

<break> ::= RES_BREAK ";"

<continue> ::= RES_CONTINUE ";"

<incre_decre> ::= ID <signo_incre_decre>

<signo_incre_decre> ::= "+" "+"
			| "-" "-"

<casteo> ::= "(" <tipos> ")" <expresion>

<arreglo> ::=   <tipos> ID "[" "]" "=" RES_NEW <tipos> "[" <expresion> "]" PYC
		| <tipos> ID "[" "]" "=" "[" <asignacion_valores_arreglo> "]" PYC
		| <tipos> ID "[" "]" "=" <expresion> "." RES_C_STR "(" ")" ;

<asignacion_valores_arreglo> ::= <asignacion_valores_arreglo> "," <expresion>
				| <expresion>

<buscar_arreglo> ::= ID "[" <expresion> "]"

<editar_arreglo> ::= ID "[" <expresion> "]" "=" <expresion> PYC

<metodo> ::= <tipos> ID "(" <parametros> ")" "{" <instrucciones> "}"
		| <tipos> ID "(" ")" "{" <instrucciones> "}"

<execute> ::= <RES_EXECUTE> ID "(" <parametros_llamada> ")"
		| <RES_EXECUTE> ID "(" ")"

<parametros_llamada> ::= <parametros_llamada> "," <expresion>
			| <expresion>

<llamada> ::= ID "(" <parametros_llamada> ")" PYC
		ID "(" ")" PYC		  

